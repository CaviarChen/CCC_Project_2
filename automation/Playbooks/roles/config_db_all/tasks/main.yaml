---
- name: Install pip
  become: yes
  apt:
    name: python-pip
    state: latest
    update_cache: yes

- name: Update pip
  pip:
    name: pip
    state: latest

- name: Install docker-py
  pip:
    name: docker
    state: latest

- name: Config Docker Proxy
  blockinfile:
    path: /etc/systemd/system/docker.service.d/http-proxy.conf
    create: yes
    block: |
      [Service]
      Environment="HTTP_PROXY=http://wwwproxy.unimelb.edu.au:8000"

- name: Restart docker damon
  shell: "systemctl daemon-reload"

- name: Restart Docker
  systemd:
    name: docker
    state: restarted

- name: Pull docker image
  docker_image:
      name: couchdb
      tag: latest

- name: Write CouchDB config File
  template:
    src: local_ini.j2
    dest: /home/ubuntu/local.ini
    force: yes

- template:
    src: vm_args.j2
    dest: /home/ubuntu/vm.args
    force: yes

- name: Check if the docker is running
  shell: "docker start couch"
  ignore_errors: true
  no_log: true
  register: docker_start

- name: Start the CouchDB docker
  shell: "docker run -p 5984:5984 \
                -p 5986:5986 \
                -p 4369:4369 \
                -p 9100-9150:9100-9150 \
                -e COUCHDB_USER={{ couchdb_user }} \
                -e COUCHDB_PASSWORD={{ couchdb_passwd }} \
                -v /home/ubuntu/vm.args:/opt/couchdb/etc/vm.args \
                -v /home/ubuntu/local.ini:/opt/couchdb/etc/local.ini \
                -v /data:/opt/couchdb/data \
                --name couch \
                -d couchdb:latest"
  when: docker_start.rc != 0 

- pause:
    seconds: 10

- name: Enable cluster on each node
  shell: >
    curl -X POST -H "Content-Type: application/json"
    http://{{ couchdb_user }}:{{ couchdb_passwd }}@localhost:5984/_cluster_setup
    -d '{"action": "enable_cluster", "bind_address":"0.0.0.0",
    "username": "{{ couchdb_user }}", "password":"{{ couchdb_passwd }}",
    "node_count":"{{ groups['all'] | length }}"}'
